/* TxS Database */
.boT .t .n:not(.nl)::after,
.button,
.domain td:not(.n),
.ellips {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
}
.dg .i,
.pg .im {
    --w: calc(100% + var(--p));
}
.dg .i,
.erP,
.maLT,
.pg .im {
    text-align: center;
}
.button.sc:hover,
.cInherit.u a:hover,
abbr[title] {
    text-decoration: underline;
}
.relative,
body,
sub,
sup {
    position: relative;
}
.button.ln,
.cInherit a {
    color: inherit;
}
.extL::after,
img {
    display: inline-block;
}
.maFM a:hover,
body {
    color: var(--coreT-prim);
}
.boT .t .a:not(.ah)::before,
.boT .t .n:not(.nl)::after,
.button span[data-text]::after,
.maFM nav[dat-text]::before,
.maLT .b::after,
.noT.nJ span::before,
.tag .a::before {
    content: attr(data-text);
}
.table,
html {
    scroll-behavior: smooth;
}
:root {
    --fontBase: 16px;
    --fontHead: "Titillium Web", sans-serif;
    --fontBody: "Noto Sans", sans-serif;
    --fontCode: "Fira Mono", sans-serif;
    --unicode: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
    --fontA: 0.938rem;
    --fontD: 0.875rem;
    --fontM: 0.813rem;
    --fontMM: 0.75rem;
    --h-fontW: 600;
    --h1: 2rem;
    --h2: 1.9rem;
    --h3: 1.75rem;
    --h4: 1.7rem;
    --h5: 1.6rem;
    --h6: 1.55rem;
}
.nB {
    --coreT-prim: #191919;
    --coreT-dim: #585b63;
    --coreLink: #3740ff;
    --coreBg: #fffdfc;
    --coreBg-dim: #f8f9fa;
    --coreBg-gray: #d2d3d7;
    --coreBg-pop: rgb(255 253 252 / 50%);
    --coreBd-color: #323232;
    --selT: currentColor;
    --selBg: #d2d3d7;
    --placeH: var(--coreT-dim);
    --icWidth: 35px;
    --icHeight: 35px;
    --hedS: "";
    --hedH: 80px;
    --hedH-mob: 80px;
    --hed-font: 1.125rem;
    --hed-fontW: 600;
    --hedT: currentColor;
    --hedBg: var(--coreBg);
    --hed-logoW: 160px;
    --hed-logoH: 50px;
    --mainW-max: 1220px;
    --mainPage-max: 860px;
    --mainPadding: 22px;
    --mainSpace: 40px;
    --mainT-prim: currentColor;
    --mainT-dim: var(--coreT-dim);
    --mainBg: var(--coreBg);
    --mainBg-dim: var(--coreBg-dim);
    --mainBg-gray: var(--coreBg-gray);
    --mainBd-line: 1px;
    --mainBd-color: var(--coreBd-color);
    --mainBd-rad: 2.5px;
    --fotT: currentColor;
    --fotBd-line: 1px;
    --fotBd-color: var(--coreBd-color);
    --posT-fontW: 700;
    --posT-fontMin: 2.125rem;
    --posT-fontMax: 2.625rem;
    --posTi-fontMin: 1.1rem;
    --posTi-fontMax: 1.1rem;
    --posB-fontMin: 0.93rem;
    --posB-fontMax: 1rem;
    --lineHeight: 1.65;
    --tableBg: rgb(246 246 246 / 80%);
    --tTime: 0.1s ease;
    --tShow: opacity var(--tTime), visibility var(--tTime);
    --free: "Free!";
    --new: "New!";
    --breadC: "\002F";
    --noImg: "null";
}
@font-face {
    font-family: "Noto Sans";
    font-style: italic;
    font-weight: 400;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/notosans/v27/o-0OIpQlx3QUlC5A4PNr4ARCQ_k.woff2) format("woff2");
    unicode-range: var(--unicode);
}
@font-face {
    font-family: "Noto Sans";
    font-style: normal;
    font-weight: 400;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/notosans/v27/o-0IIpQlx3QUlC5A4PNr5TRA.woff2) format("woff2");
    unicode-range: var(--unicode);
}
@font-face {
    font-family: "Noto Sans";
    font-style: italic;
    font-weight: 500;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/notosans/v27/o-0TIpQlx3QUlC5A4PNr4AyxYOyDzW0.woff2) format("woff2");
    unicode-range: var(--unicode);
}
@font-face {
    font-family: "Noto Sans";
    font-style: normal;
    font-weight: 500;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/notosans/v27/o-0NIpQlx3QUlC5A4PNjFhdVZNyB.woff2) format("woff2");
    unicode-range: var(--unicode);
}
@font-face {
    font-family: "Noto Sans";
    font-style: italic;
    font-weight: 600;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/notosans/v27/o-0TIpQlx3QUlC5A4PNr4AydZ-yDzW0.woff2) format("woff2");
    unicode-range: var(--unicode);
}
@font-face {
    font-family: "Noto Sans";
    font-style: normal;
    font-weight: 600;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/notosans/v27/o-0NIpQlx3QUlC5A4PNjOhBVZNyB.woff2) format("woff2");
    unicode-range: var(--unicode);
}
@font-face {
    font-family: "Noto Sans";
    font-style: italic;
    font-weight: 700;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/notosans/v27/o-0TIpQlx3QUlC5A4PNr4Az5ZuyDzW0.woff2) format("woff2");
    unicode-range: var(--unicode);
}
@font-face {
    font-family: "Noto Sans";
    font-style: normal;
    font-weight: 700;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/notosans/v27/o-0NIpQlx3QUlC5A4PNjXhFVZNyB.woff2) format("woff2");
    unicode-range: var(--unicode);
}
@font-face {
    font-family: "Titillium Web";
    font-style: normal;
    font-weight: 400;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/titilliumweb/v15/NaPecZTIAOhVxoMyOr9n_E7fdMPmDQ.woff2) format("woff2");
    unicode-range: var(--unicode);
}
@font-face {
    font-family: "Titillium Web";
    font-style: italic;
    font-weight: 400;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/titilliumweb/v15/NaPAcZTIAOhVxoMyOr9n_E7fdMbWD6xW.woff2) format("woff2");
    unicode-range: var(--unicode);
}
@font-face {
    font-family: "Titillium Web";
    font-style: normal;
    font-weight: 600;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/titilliumweb/v15/NaPDcZTIAOhVxoMyOr9n_E7ffBzCGItzYw.woff2) format("woff2");
    unicode-range: var(--unicode);
}
@font-face {
    font-family: "Titillium Web";
    font-style: italic;
    font-weight: 600;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/titilliumweb/v15/NaPFcZTIAOhVxoMyOr9n_E7fdMbe0IhDYZyc.woff2) format("woff2");
    unicode-range: var(--unicode);
}
@font-face {
    font-family: "Titillium Web";
    font-style: normal;
    font-weight: 700;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/titilliumweb/v15/NaPDcZTIAOhVxoMyOr9n_E7ffHjDGItzYw.woff2) format("woff2");
    unicode-range: var(--unicode);
}
@font-face {
    font-family: "Titillium Web";
    font-style: italic;
    font-weight: 700;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/titilliumweb/v15/NaPFcZTIAOhVxoMyOr9n_E7fdMbetIlDYZyc.woff2) format("woff2");
    unicode-range: var(--unicode);
}
@font-face {
    font-family: "Fira Mono";
    font-style: normal;
    font-weight: 400;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/firamono/v14/N0bX2SlFPv1weGeLZDtgJv7S.woff2) format("woff2");
    unicode-range: var(--unicode);
}
::selection {
    color: var(--selT);
    background-color: var(--selBg);
}
::placeholder {
    color: var(--placeH);
    opacity: 0.6;
    transition: var(--tShow);
}
*,
::after,
::before {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}
html {
    overflow-x: hidden;
    font: var(--fontBase) var(--fontBody);
}
body {
    margin: 0;
    padding: 0 !important;
    background-color: var(--coreBg);
    -webkit-font-smoothing: antialiased;
}
h1,
h2,
h3,
h4,
h5,
h6 {
    margin-block: 0.67em;
    font: var(--h-fontW) 1.4rem/1.4 var(--fontHead);
    color: currentColor;
}
h1 {
    font-size: var(--h1);
}
h2 {
    font-size: var(--h2);
}
h3 {
    font-size: var(--h3);
}
h4 {
    font-size: var(--h4);
}
h5 {
    font-size: var(--h5);
}
h6 {
    font-size: var(--h6);
}
a {
    color: var(--coreLink);
    text-decoration: none;
}
.button:active,
a:hover {
    filter: brightness(0.9);
}
sub,
sup {
    font-size: 70%;
    line-height: 0;
    vertical-align: baseline;
}
sub {
    inset-block-end: -0.25em;
}
sup {
    inset-block-start: -0.5em;
}
abbr[title] {
    border-bottom: none;
}
iframe {
    width: 100%;
    border: 0;
    margin-inline: auto;
}
figure {
    margin-inline: 0;
}
img {
    max-width: 100%;
    height: auto;
    border-style: none;
}
svg {
    --svg: 24px;
    width: var(--svg);
    height: var(--svg);
    fill: currentColor;
}
svg .line,
svg.line {
    fill: none;
    stroke: currentColor;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-width: 1.25;
}
.fc::after {
    content: "";
    position: fixed;
    inset: 0;
    z-index: 1;
    transition: background var(--tTime), var(--tShow), backdrop-filter var(--tTime);
    background-color: transparent;
    opacity: 0;
    visibility: hidden;
}
:is(.free, .new)::after {
    display: inline-block;
    content: var(--free);
    color: var(--coreLink);
    font-weight: 400;
    font-size: small;
    text-indent: 5px;
}
.new::after {
    content: var(--new);
}
.extL::after {
    content: "";
    width: 14px;
    height: 14px;
    margin-inline-start: 6px;
    background: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23989b9f' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><line x1='7' y1='17' x2='17' y2='7'/><polyline points='7 7 17 7 17 17'/><\/svg>")
        center/16px no-repeat;
}
.clear,
.noMargin {
    margin: 0;
}
.noList,
.noList :where(ul, ol) {
    list-style: none;
    margin: 0;
    padding: 0;
}
.boT,
.maM .tt,
.pg,
.ph {
    margin-block-end: 20px;
}
.block,
.noList li {
    display: block;
}
.noWrap {
    white-space: nowrap;
}
.break {
    word-break: break-word;
}
.noFilter a:hover {
    filter: none;
}
.colorDim {
    color: var(--coreT-dim);
}
.colorLink {
    color: var(--coreLink);
}
.bgInherit {
    background-color: inherit;
}
.bgDim {
    background-color: var(--mainBg-dim);
}
.bgGray {
    background-color: var(--mainBg-gray);
}
.clamp {
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
}
.strike {
    text-decoration: line-through;
}
.flex {
    display: flex;
}
.flex.center {
    align-items: center;
    justify-content: center;
}
.flex.centerA,
.flexIn.center {
    align-items: center;
}
.flex.centerJ {
    justify-content: center;
}
.flex.column {
    flex-direction: column;
}
.flex.wrap {
    flex-wrap: wrap;
}
.flex.space-between {
    justify-content: space-between;
}
.flex.baseline,
.flexIn.baseline {
    align-items: baseline;
}
.flexIn {
    display: inline-flex;
}
.shrink {
    flex-shrink: 0;
}
.grow {
    flex-grow: 1;
}
.op svg,
.opacity {
    opacity: 0.8;
}
.invisible,
.maHM .a::after {
    opacity: 0;
    visibility: hidden;
}
.hidden,
[hidden] {
    display: none;
}
.inline {
    display: inline;
}
.clear {
    width: 100%;
    display: block;
    padding: 0;
    float: none;
    clear: both;
}
.btnF,
.table {
    margin-block: 1em;
}
.button {
    display: inline-flex;
    align-items: center;
    column-gap: 10px;
    max-width: var(--btnW-max);
    padding-block: 0.65rem;
    padding-inline: 1rem;
    outline: 0;
    border: 0;
    border-radius: var(--btnBd-rad);
    color: var(--btnT);
    background-color: var(--btnBg);
    font: 0.937rem/1.5 var(--fontBody);
}
.button.ln,
.button.sh {
    border: var(--btnBd-line) solid var(--btnBd-color);
    background-color: transparent;
}
.fontH,
.maFM nav[dat-text]::before {
    font-family: var(--fontHead);
}
.button:hover {
    filter: brightness(1.1);
}
.button.ln {
    transition: border var(--tTime), box-shadow var(--tTime);
}
.button.ln:hover {
    border-color: var(--btnBg);
    box-shadow: 0 0 0 0.5px var(--btnBg) inset;
}
.button.sc {
    padding-inline: 0;
    color: currentColor;
    background-color: transparent;
}
.button.sh {
    padding-inline: 1.3rem;
    color: inherit;
    transition: transform var(--tTime), box-shadow var(--tTime);
}
.button.sh:hover {
    transform: translate(-4px, -4px);
    box-shadow: 4px 4px var(--btnBd-color);
    filter: none;
}
.button.round {
    border-radius: 30px;
}
.button svg {
    --svg: 20px;
    flex-shrink: 0;
    stroke-width: 1.5;
}
.button span[data-text]::after {
    display: inline-block;
    font-size: smaller;
    text-indent: 4px;
    opacity: 0.8;
}
.btnF {
    display: flex;
    justify-content: center;
    gap: 12px;
}
.ic {
    display: inline-flex;
    flex-shrink: 0;
    align-items: center;
    justify-content: center;
    min-width: var(--icWidth);
    height: var(--icHeight);
}
:is(.i12, .i14, .i16, .i18, .i20, .i22, .i28) svg {
    flex-shrink: 0;
}
.i12 svg {
    --svg: 12px;
}
.i14 svg {
    --svg: 14px;
}
.i16 svg {
    --svg: 16px;
}
.i18 svg {
    --svg: 18px;
}
.i20 svg {
    --svg: 20px;
}
.i22 svg {
    --svg: 22px;
}
.i28 svg {
    --svg: 28px;
}
.fontA {
    font-size: var(--fontA);
}
.fontD,
table {
    font-size: var(--fontD);
}
.fontDM {
    font-size: clamp(0.813rem, 0.758rem + 0.208vw, 0.875rem);
}
.fontM {
    font-size: var(--fontM);
}
.fontMM {
    font-size: var(--fontMM);
}
.fontS {
    font-size: small;
}
.fontSm {
    font-size: smaller;
}
.fontB {
    font-family: var(--fontBody);
}
.fontC {
    font-family: var(--fontCode);
}
.fontW-400 {
    font-weight: 400;
}
.fontW-500,
table th {
    font-weight: 500;
}
.erP .t,
.fontW-600,
.noT.nJ .c {
    font-weight: 600;
}
.fontW-700 {
    font-weight: 700;
}
.erP {
    height: 100dvh;
}
.erPC {
    width: min(calc(100% - (var(--mainPadding) * 2.5)), 450px);
}
.erP .e {
    color: rgb(0 0 0 / 10%);
    font-size: clamp(3.2rem, 2.935rem + 1.008vw, 3.5rem);
}
.erP .t {
    font-size: clamp(1.312rem, 1.234rem + 0.296vw, 1.4rem);
}
.erP p {
    margin-block: 20px 30px;
    line-height: 1.5;
}
.noJS :is(.noscript, .lazyYt) {
    display: none;
}
.noT {
    position: fixed;
    inset-inline-start: var(--mainPadding);
    inset-block-end: var(--mainPadding);
    max-width: 400px;
    padding-block: 20px;
    padding-inline: 20px;
    border-radius: var(--mainBd-rad);
    color: #d9e2f0;
    background: #323232;
    font-size: var(--fontM);
    line-height: 1.4;
    font-family: var(--fontBody);
    box-shadow: 0 15px 30px -8px rgb(0 0 0 / 8%);
    z-index: 20;
}
.Header,
.dg .i span,
.pg .im span {
    background-position: center;
    background-repeat: no-repeat;
}
.noT.nJ {
    --p: 50px;
    padding-block-end: var(--p);
}
.domain tr:nth-child(n + 5):not(:last-child),
.no-items,
.noT.nJ:not(:target),
.noT.nJ:not([open]) {
    display: none;
}
.noT.nJ summary {
    display: flex;
    align-items: center;
    position: absolute;
    inset-block-end: 0;
    inset-inline-end: 0;
    height: var(--p);
    padding-inline: 20px;
}
.noT.cP {
    --h: var(--opH);
    inset-block-end: -100%;
    display: inline-flex;
    align-items: center;
    padding-block: 15px;
    transition: inset var(--tTime), var(--tShow);
    animation: 2.2s ease-in forwards noT;
}
.noT.cP::before {
    content: var(--copied);
}
.maH.sticky::after,
.maHM .a::after {
    content: "";
    inset-block-end: 0;
    position: absolute;
}
.boT.i,
.maLT .b {
    margin-block-end: 1rem;
}
.max {
    max-width: var(--mainW-max);
    margin-inline: auto;
    padding-left: var(--mainPadding);
    padding-right: var(--mainPadding);
}
.maW {
    --maxW: 900px;
    min-height: 100dvh;
}
.maW.it {
    --maxW: var(--mainPage-max);
}
.maH {
    height: var(--hedH);
    color: var(--hedT);
    background-color: var(--hedBg);
    z-index: 2;
    border: 1px solid;
    border-radius:15px;
    margin:20px;
}
.maH.sticky::after {
    inset-inline: 0;
    border-block-end: 0px solid var(--mainBd-color);
}
.maH .max {
    --hdLogo: 200px;
    --g: 35px;
    gap: 4rem;
    height: 100%;
}
.maHT {
    max-width: var(--hdLogo);
}
.maHR {
    width: calc(100% - var(--hdLogo));
}
.maHR > :first-child {
    margin-inline-end: auto;
}
.maHM {
    gap: var(--g);
}
.maHM li > * {
    padding-block: 12px;
}
.maHM .a::after {
    inset-inline-start: 1px;
    width: 0;
    height: 2px;
    border-radius: 2px;
    background-color: currentColor;
    transition: width var(--tTime), var(--tShow);
}
.maHM .a:hover::after {
    width: 20px;
    opacity: 0.8;
    visibility: visible;
}
.maHI {
    gap: 8px;
    margin-inline: var(--g) -9px;
}
.maB,
.maLT {
    margin-inline: auto;
}
.maHI .bC:not([data-text="0"])::before {
    --w: 16px;
    content: attr(data-text);
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    inset-block-start: -1px;
    inset-inline-end: 2px;
    min-width: var(--w);
    height: var(--w);
    padding-inline: 4px;
    border-radius: 20px;
    color: #fffdfc;
    background-color: #ed3f5a;
    font: 600 9px var(--fontHead);
}
.maL {
    padding-block: 5rem;
}
.maL.i {
    padding-block: 3rem 0;
}
.maB:not(.i),
.maLT {
    width: min(90%, var(--maxW));
}
.maLT .b {
    gap: 8px;
    font-size: clamp(0.938rem, 0.781rem + 0.391vw, 1rem);
}
.maLT .t {
    margin-block: 0 1.5rem;
    font-weight: 400;
    font-size: clamp(2.125rem, 1.684rem + 1.681vw, 2.625rem);
    line-height: 1.25;
    z-index: 1;
}
:is(.maLT .t, .pt .name.i) .i::after {
    content: "";
    position: absolute;
    inset-block-end: 0;
    inset-inline-end: -25px;
    width: clamp(4.875rem, 4.324rem + 2.101vw, 5.5rem);
    height: 28px;
    background-color: var(--bs);
    z-index: -1;
}
.maLT .d,
.pd {
    color: var(--coreT-dim);
    font-size: clamp(0.919rem, 0.842rem + 0.292vw, 1.006rem);
    line-height: 1.6;
}
.dt .t,
.pt .name:not(.i) {
    font-size: var(--posTi-fontMax);
}
.maS svg {
    width: 100%;
    height: 30px;
    color: var(--coreBg);
    transform: rotateY(180deg);
}
.maM,
.maN {
    padding-block: 3rem 5rem;
}
.maN.i {
    padding-block: 2rem;
}
.maF {
    padding-block: 2.5rem 2rem;
    border: var(--fotBd-line) solid var(--fotBd-color);
    color: var(--fotT);
    margin: 20px;
    border-radius: 15px;
}
.maF .max {
    column-gap: 4rem;
}
.maFC {
    align-self: center;
    font-size: 0.78rem;
    line-height: 1.3;
}
.maFM {
    gap: 2rem 4rem;
}
.maFM nav[dat-text]::before {
    display: block;
    margin-block-end: 10px;
    font-weight: 700;
}
.maFM li {
    flex-shrink: 0;
}
.maFM li:not(:last-child)::after {
    content: "\00b7";
    margin-inline: 14px;
    opacity: 0.8;
}
.Header {
    width: 100%;
    background-size: 100%;
}
.Header img {
    max-width: var(--hed-logoW);
    max-height: var(--hed-logoH);
}
.heN {
    font-weight: var(--hed-fontW);
    font-size: var(--hed-font);
}
.pe {
    font-size: var(--posB-fontMax);
}
.heT {
    min-width: 48px;
}
.heT .JD {
    display: block;
    width: 30px;
    height: clamp(1.625rem, 1.404rem + 0.84vw, 1.875rem);
    margin-inline-start: -2px;
}
.maB.i,
.maB.ip {
    width: min(90%, var(--mainPage-max));
}
.boC.f > * {
    --p: 22px;
    width: calc((100% / 3) - (var(--g) * 2 / 3));
    padding: var(--p);
    border: 1px solid var(--mainBd-color);
    border-radius: var(--mainBd-rad);
    background-color: var(--mainBg);
    transition: box-shadow var(--tTime), transform var(--tTime);
}
.boC.f > article.p:hover {
    box-shadow: 4px 4px var(--mainBd-color);
    transform: translate(-4px, -4px);
}
.pg .im {
    width: var(--w);
    margin-inline: calc(var(--p) / -2);
    padding-block-start: var(--w);
    background-color: var(--coreBg-dim);
}
.pg .im span {
    inset: 0;
}
.pe {
    margin-block-start: 1.5rem;
    line-height: var(--lineHeight);
    transition: font var(--tTime);
}
.pe :is(h1, h2, h3, h4, h5, h6) {
    margin-block-start: 1em;
    padding-block-start: 0;
    font-weight: 700;
    line-height: 1.3;
    transition: margin var(--tTime), padding var(--tTime);
}
.boT .t,
table {
    line-height: 1.4;
}
.pe :is(h1, h2, h3, h4, h5, h6):target {
    margin-block-start: 0;
    padding-block-start: calc(var(--hedH) / 2);
}
.pe :is(h1, h2, h3, h4, h5, h6).h::before {
    content: attr(data-text);
}
.table {
    padding-block-end: 4px;
    overflow-y: hidden;
    overflow-x: auto;
}
.table.w90 table:not(.tr-caption-container) {
    min-width: 90%;
}
.table.w100 table:not(.tr-caption-container) {
    min-width: 100%;
}
.table.noLine table th:not(:last-child),
.table.noLine table:not(.tr-caption-container) td:not(:last-child) {
    border-inline-end-color: transparent;
}
.table.hoverBg table:not(.tr-caption-container) tbody tr:hover,
.table.hoverTd td:hover,
.table.withBg table:not(.tr-caption-container) tbody tr:nth-child(odd) {
    background-color: var(--tableBg);
}
table {
    border-spacing: 0;
}
table:not(.tr-caption-container) {
    border: 1px solid var(--mainBd-color);
    border-radius: var(--mainBd-rad);
    overflow: hidden;
}
table th,
table:not(.tr-caption-container) td {
    padding: 14px;
    border-width: 0;
    border-style: solid;
    border-color: var(--mainBd-color);
}
table th:not(:last-child),
table:not(.tr-caption-container) td:not(:last-child) {
    border-inline-end-width: 1px;
}
table th,
table:not(.tr-caption-container) tr:not(:last-child) td {
    border-block-end-width: 1px;
}
table th {
    text-align: start;
}
.domain {
    counter-reset: n;
}
.domain .n {
    counter-increment: n;
}
.domain .n::before {
    content: counter(n) ".";
}
.domain td:not(.n) {
    max-width: 225px;
}
@media screen and (min-width: 768px) {
    ::-webkit-scrollbar {
        -webkit-appearance: none;
        width: 4px;
        height: 5px;
    }
    ::-webkit-scrollbar-track {
        background-color: transparent;
    }
    ::-webkit-scrollbar-thumb {
        background-color: rgb(0 0 0 / 15%);
        border-radius: 10px;
    }
    ::-webkit-scrollbar-thumb:hover {
        background-color: rgb(0 0 0 / 35%);
    }
    ::-webkit-scrollbar-thumb:active {
        background-color: rgb(0 0 0 / 35%);
    }
}
@media screen and (max-width: 768px) {
    .maF .max {
        column-gap: 2rem;
    }
    .maFC {
        flex-shrink: 0;
        align-self: baseline;
    }
}
@media screen and (max-width: 640px) {
    .maHM,
    .table {
        display: flex;
    }
    .table {
        padding-inline: var(--mainPadding);
    }
    .maH .max,
    .maHM {
        gap: 0;
    }
    .nB {
        --hedH: var(--hedH-mob);
        --posT-fontMax: var(--posT-fontMin);
        --posTi-fontMax: var(--posTi-fontMin);
        --posB-fontMax: var(--posB-fontMin);
    }
    .maHM {
        flex-direction: column;
        position: absolute;
        inset-block-start: 0;
        inset-inline-end: 0;
        min-width: 100px;
        max-width: 160px;
        padding: 10px 15px;
        border: var(--mainBd-line) solid var(--mainBd-color);
        border-radius: var(--mainBd-rad);
        background-color: var(--mainBg);
        transition: inset var(--tTime), transform var(--tTime), var(--tShow);
        border-radius: 15px;
        transform: translate(-4px, -4px);
        opacity: 0;
        visibility: hidden;
        z-index: 2;
    }
    .maHM li > * {
        display: inline-block;
        padding-block: 5px;
    }
    .maHM .a::after {
        display: none;
    }
    .forM:checked ~ .maHR .maHM {
        inset-block-start: 5px;
    }
    .forM:checked ~ .maHR .mC::after,
    .forM:checked ~ .maHR .maHM {
        opacity: 1;
        visibility: visible;
    }
    .maLT {
        text-align: start;
    }
    :is(.boC.f, .coM) > * {
        width: calc((100% / 2) - (var(--g) / 2));
    }
}
@media screen and (max-width: 500px) {
    .noT {
        inset-block-end: 0;
        inset-inline: 0;
        width: 100%;
        max-width: 100%;
        border-radius: 0;
    }
    .noT.cP {
        min-height: var(--h);
        margin-block-end: calc(var(--mainPadding) * -1);
    }
    .table {
        position: relative;
        width: calc(100% + (var(--mainPadding) * 2));
        margin-inline: calc(var(--mainPadding) * -1);
    }
    :is(.boC.f, .coM) > * {
        width: 100%;
    }
}
@keyframes noT {
    0% {
        opacity: 0;
    }
    10%,
    80% {
        opacity: 1;
        inset-block-end: var(--mainPadding);
    }
    100% {
        opacity: 0;
        inset-block-end: -100%;
        visibility: hidden;
    }
}
.scrlH::-webkit-scrollbar {
    width: 0;
    height: 0;
}
.scrlH::-webkit-scrollbar-track {
    background-color: transparent;
}
.scrlH::-webkit-scrollbar-thumb {
    background-color: transparent;
    border: none;
}
@media print {
    .noPrint {
        display: none;
    }
}
.maM .tt h2::after {
    content: " \2014";
}
.boT .t {
    overflow: hidden;
}
.boT .t .a:not(.ah)::before,
.tag .a::before {
    content: attr(data-text);
}
.boT .t .n:not(.nm) {
    padding-inline-start: 8px;
}
.boT .t .n:not(.nl)::after {
    content: attr(data-text);
}
.boT .t .nm::before {
    content: var(--breadC);
    flex-shrink: 0;
    color: var(--coreT-dim);
    margin-inline: 8px;
    font-weight: 400;
}
.boN {
    gap: 10px;
    justify-content: flex-end;
    margin-block-start: 3.5rem;
}
.boN .p {
    margin-inline: -2px auto;
}
.boN .p::after {
    content: var(--prev);
}
.boN .n::before {
    content: var(--next);
}
.boC.f {
    --g: 14px;
    gap: var(--g);
}
.boC.f > *,
:where(.Image, .Text) .dp {
    --p: 22px;
    width: calc((100% / 3) - (var(--g) * 2 / 3));
    padding: var(--p);
    border: 1px solid var(--mainBd-color);
    border-radius: var(--mainBd-rad);
    background-color: var(--mainBg);
    transition: box-shadow var(--tTime), transform var(--tTime);
}
.boC.f > article.p:hover,
:where(.Image, .Text) .dp:hover {
    box-shadow: 4px 4px var(--mainBd-color);
    transform: translate(-4px, -4px);
}
.ph {
    gap: 8px;
    line-height: 1.2;
}
.fp,
.maD {
    gap: var(--g);
}
:is(.tag .v) {
    margin-inline-end: 3px;
    vertical-align: middle;
}
.tag .i[data-text]::before {
    content: attr(data-text);
    color: var(--coreT-dim);
}
.dg .i,
.pg .im {
    width: var(--w);
    margin-inline: calc(var(--p) / -2);
    padding-block-start: var(--w);
    background-color: var(--coreBg-dim);
    line-height: 1.2;
    overflow: hidden;
}
.pg .im.null::before {
    content: var(--noImg);
    position: absolute;
    inset-block-start: 50%;
    inset-inline-start: 50%;
    transform: translate(-50%, -50%);
}
.dg .i span,
.pg .im span {
    position: absolute;
    inset: 0;
    background-size: cover;
}
.dt .t,
.pt .name:not(.i) {
    line-height: 1.3;
}
.pt .name.i {
    font-weight: var(--posT-fontW);
    font-size: var(--posT-fontMax);
    line-height: 1.25;
    z-index: 1;
}
.ps .snippet {
    margin-block-start: 10px;
    line-height: 1.4;
}
.ps:not(.all) .snippet {
    display: -webkit-box;
    -webkit-line-clamp: 2;
}
.pe {
    margin-block-start: 3rem;
    line-height: var(--lineHeight);
    transition: font var(--tTime);
}
.maD {
    --g: 22px;
}
.maD > * {
    width: calc((100% / 3) - (var(--g) * 2 / 3));
}
.fp {
    --g: 20px;
    --b: #8775f5;
}
.fp > * {
    gap: 5px;
    width: calc((100% / 4) - (var(--g) * 3 / 4));
    padding: 18px;
    border: 1px solid var(--mainBg-gray);
    border-radius: 15px;
    background-color: var(--mainBg);
    transition: border var(--tTime), box-shadow var(--tTime);
}
.fp > :hover {
    border-color: var(--mainBd-color);
}
.fp > :not(.m):hover {
    box-shadow: 0 0 0 0.5px var(--mainBd-color) inset;
}
.fp > :not(.m) .t {
    font-size: clamp(0.938rem, 0.883rem + 0.208vw, 1rem);
}
.fp .m {
    border-style: dashed;
}
.fp .i {
    gap: 5px;
    margin-block-end: 0.65rem;
}
:is(.maD, .fp) > * {
    width: calc((100% / 2) - (var(--g) / 2));
}
.fp {
    gap: 12px;
}
